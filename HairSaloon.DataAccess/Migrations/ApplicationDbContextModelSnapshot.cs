// <auto-generated />
using System;
using HairSaloon.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HairSaloon.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HairSaloon.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 5, 23, 54, 23, 152, DateTimeKind.Local).AddTicks(7993),
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 5, 23, 54, 23, 152, DateTimeKind.Local).AddTicks(8031),
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 11, 5, 23, 54, 23, 152, DateTimeKind.Local).AddTicks(8033),
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 11, 5, 23, 54, 23, 152, DateTimeKind.Local).AddTicks(8035),
                            ServiceId = 4
                        });
                });

            modelBuilder.Entity("HairSaloon.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Stylizacja włosów",
                            Name = "Strzyżenie męskie",
                            Price = 50
                        },
                        new
                        {
                            Id = 2,
                            Category = "Stylizacja włosów",
                            Name = "Strzyżenie damskie",
                            Price = 50
                        },
                        new
                        {
                            Id = 3,
                            Category = "Stylizacja włosów",
                            Name = "Farbowanie włosów",
                            Price = 50
                        },
                        new
                        {
                            Id = 4,
                            Category = "Pielęgnacja",
                            Name = "Depilacja",
                            Price = 50
                        });
                });

            modelBuilder.Entity("HairSaloon.Models.Appointment", b =>
                {
                    b.HasOne("HairSaloon.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
